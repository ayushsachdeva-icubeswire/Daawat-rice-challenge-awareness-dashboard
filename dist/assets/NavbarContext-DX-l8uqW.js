import{r as o,v as u}from"./index-CRAhdKC0.js";function z(t,e,n){const r=o.useRef(t!==void 0),[s,a]=o.useState(e),c=t!==void 0,f=r.current;return r.current=c,!c&&f&&s!==e&&a(e),[c?t:s,o.useCallback((...v)=>{const[$,...x]=v;let p=n==null?void 0:n($,...x);return a($),p},[n])]}const i={prefix:String(Math.round(Math.random()*1e10)),current:0},l=u.createContext(i),b=u.createContext(!1);let S=!!(typeof window<"u"&&window.document&&window.document.createElement),d=new WeakMap;function m(t=!1){let e=o.useContext(l),n=o.useRef(null);if(n.current===null&&!t){var r,s;let a=(s=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED)===null||s===void 0||(r=s.ReactCurrentOwner)===null||r===void 0?void 0:r.current;if(a){let c=d.get(a);c==null?d.set(a,{id:e.current,state:a.memoizedState}):a.memoizedState!==c.state&&(e.current=c.id,d.delete(a))}n.current=++e.current}return n.current}function w(t){let e=o.useContext(l);e===i&&!S&&console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");let n=m(!!t),r=`react-aria${e.prefix}`;return t||`${r}-${n}`}function C(t){let e=u.useId(),[n]=o.useState(M()),r=n?"react-aria":`react-aria${i.prefix}`;return t||`${r}-${e}`}const j=typeof u.useId=="function"?C:w;function y(){return!1}function g(){return!0}function h(t){return()=>{}}function M(){return typeof u.useSyncExternalStore=="function"?u.useSyncExternalStore(h,y,g):o.useContext(b)}const P=o.createContext(null);P.displayName="NavbarContext";export{j as $,P as c,z as u};
