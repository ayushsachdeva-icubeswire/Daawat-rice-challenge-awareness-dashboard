import{l as L,r as h,h as B,j as e,R as A,d as b}from"./index-CyIL2mBc.js";import{C as H}from"./ComponentContainerCard-BQjcZKoX.js";import{P as z}from"./PageTitle-BNyhYK3p.js";import{A as q}from"./api-Bmjna9l7.js";import{M as g}from"./Modal-5Z5a5eZb.js";import{F as l}from"./Form-C3h_zakL.js";import{B as P}from"./Button-CmMIxwUr.js";import"./Card-CVy3a5lq.js";import"./IconifyIcon-Dn6Tt4Ep.js";import"./AbstractModalHeader-BA8SY6y7.js";import"./useWindow-BiRL7eOa.js";import"./usePrevious-Bmb2VfSU.js";import"./useEventCallback-C7VmPGzq.js";import"./hasClass-DJGQHfEh.js";import"./useMergedRefs-BSV9Y0xE.js";import"./NoopTransition-VapeUiPS.js";import"./DataKey-COGXBUcQ.js";import"./FormCheck-C7-qbv-N.js";import"./FormControl-CQ74aT60.js";import"./warning-ByhvHV44.js";import"./FormLabel-DsrTX-FW.js";import"./ElementChildren-DE4rOTgf.js";import"./FormGroup-Df8lb4Xh.js";import"./FormSelect-Cskwo8cZ.js";import"./FormText-DEv02lbh.js";import"./Button-CUYguTrK.js";const C=q.API_URL,E=()=>({Authorization:`Bearer ${L.getCookie("token")}`,"Content-Type":"application/json"}),I=()=>({Authorization:`Bearer ${L.getCookie("token")}`});class w{static async getAllDietPlans(s){try{const t=new URLSearchParams;s!=null&&s.category&&t.append("category",s.category),s!=null&&s.subcategory&&t.append("subcategory",s.subcategory),s!=null&&s.type&&t.append("type",s.type),(s==null?void 0:s.isActive)!==void 0&&t.append("isActive",s.isActive.toString()),s!=null&&s.page&&t.append("page",s.page.toString()),s!=null&&s.limit&&t.append("limit",s.limit.toString());const r=await fetch(`${C}/dietplans?${t.toString()}`,{method:"GET",headers:E()});if(!r.ok)throw new Error(`Failed to fetch diet plans: ${r.statusText}`);return await r.json()}catch(t){throw console.error("Error fetching diet plans:",t),t}}static async getDietPlanById(s){try{const t=await fetch(`${C}/dietplans/${s}`,{method:"GET",headers:E()});if(!t.ok)throw new Error(`Failed to fetch diet plan: ${t.statusText}`);return await t.json()}catch(t){throw console.error("Error fetching diet plan:",t),t}}static async createDietPlan(s){try{const t=new FormData;t.append("name",s.name),t.append("duration",s.duration),t.append("type",s.type),t.append("category",s.category),t.append("isActive",s.isActive.toString()),s.subcategory&&t.append("subcategory",s.subcategory),s.description&&t.append("description",s.description),s.pdfFile&&t.append("pdfFile",s.pdfFile);const r=await fetch(`${C}/dietplans`,{method:"POST",headers:I(),body:t});if(!r.ok)throw new Error(`Failed to create diet plan: ${r.statusText}`);return await r.json()}catch(t){throw console.error("Error creating diet plan:",t),t}}static async updateDietPlan(s,t){try{const r=new FormData;r.append("name",t.name),r.append("duration",t.duration),r.append("type",t.type),r.append("category",t.category),r.append("isActive",t.isActive.toString()),t.subcategory&&r.append("subcategory",t.subcategory),t.description&&r.append("description",t.description),t.pdfFile&&r.append("pdfFile",t.pdfFile);const i=await fetch(`${C}/dietplans/${s}`,{method:"PUT",headers:I(),body:r});if(!i.ok)throw new Error(`Failed to update diet plan: ${i.statusText}`);return await i.json()}catch(r){throw console.error("Error updating diet plan:",r),r}}static async deleteDietPlan(s){try{const t=await fetch(`${C}/dietplans/${s}`,{method:"DELETE",headers:E()});if(!t.ok)throw new Error(`Failed to delete diet plan: ${t.statusText}`)}catch(t){throw console.error("Error deleting diet plan:",t),t}}static async deleteAllDietPlans(){try{const s=await fetch(`${C}/dietplans`,{method:"DELETE",headers:E()});if(!s.ok)throw new Error(`Failed to delete all diet plans: ${s.statusText}`)}catch(s){throw console.error("Error deleting all diet plans:",s),s}}static async downloadPDF(s){try{const t=await fetch(`${C}/dietplans/${s}/download`,{method:"GET",headers:{Authorization:`Bearer ${L.getCookie("token")}`}});if(!t.ok)throw new Error(`Failed to download PDF: ${t.statusText}`);return await t.blob()}catch(t){throw console.error("Error downloading PDF:",t),t}}static triggerPDFDownload(s,t){const r=window.URL.createObjectURL(s),i=document.createElement("a");i.href=r,i.download=t,document.body.appendChild(i),i.click(),document.body.removeChild(i),window.URL.revokeObjectURL(r)}}const G=["Vegetarian","Vegan","Keto","High Protein","Low Carb","Mediterranean","Paleo","Intermittent Fasting"],_=["Weight Loss","Weight Gain","Muscle Building","Maintenance","Athletic Performance","General Health"],V=["7 days","14 days","1 month","2 months","3 months","6 months"],O=["Beginner","Intermediate","Advanced","Low Sodium","High Fiber","Gluten Free","Dairy Free","Low Sugar","Heart Healthy","Anti-Inflammatory","Quick Prep","Budget Friendly"],W=({show:x,onHide:s,editingPlan:t,onSubmit:r})=>{const[i,v]=h.useState({name:"",duration:"",type:"",category:"",subcategory:"",description:"",isActive:!0}),[d,u]=h.useState(!1),[c,D]=h.useState({}),{showNotification:f}=B();h.useEffect(()=>{v(t?{name:t.name||"",duration:t.duration||"",type:t.type||"",category:t.category||"",subcategory:t.subcategory||"",description:t.description||"",isActive:t.isActive??!0}:{name:"",duration:"",type:"",category:"",subcategory:"",description:"",isActive:!0}),D({})},[t,x]);const F=()=>{const n={};return i.name.trim()||(n.name="Plan name is required"),i.duration||(n.duration="Duration is required"),i.type||(n.type="Type is required"),i.category||(n.category="Category is required"),D(n),Object.keys(n).length===0},S=async n=>{if(n.preventDefault(),!!F()){u(!0);try{t&&t._id?(await w.updateDietPlan(t._id,i),f({message:"Diet plan updated successfully",variant:"success"})):(await w.createDietPlan(i),f({message:"Diet plan created successfully",variant:"success"})),r()}catch(m){console.error("Error saving diet plan:",m),f({message:`Error ${t?"updating":"creating"} diet plan`,variant:"danger"})}finally{u(!1)}}},p=(n,m)=>{v(y=>({...y,[n]:m})),c[n]&&D(y=>({...y,[n]:""}))},j=n=>{var y;const m=(y=n.target.files)==null?void 0:y[0];if(m){if(m.type!=="application/pdf"){f({message:"Only PDF files are allowed",variant:"warning"}),n.target.value="";return}const k=10*1024*1024;if(m.size>k){f({message:"File size must be less than 10MB",variant:"warning"}),n.target.value="";return}p("pdfFile",m)}},N=()=>{v({name:"",duration:"",type:"",category:"",subcategory:"",description:"",isActive:!0}),D({}),s()};return e.jsxs(g,{show:x,onHide:N,size:"lg",centered:!0,children:[e.jsx(g.Header,{closeButton:!0,children:e.jsx(g.Title,{children:t?"Edit Diet Plan":"Create New Diet Plan"})}),e.jsxs(l,{onSubmit:S,children:[e.jsxs(g.Body,{children:[e.jsxs(A,{children:[e.jsx(b,{md:6,children:e.jsxs(l.Group,{className:"mb-3",children:[e.jsxs(l.Label,{children:["Plan Name ",e.jsx("span",{className:"text-danger",children:"*"})]}),e.jsx(l.Control,{type:"text",value:i.name,onChange:n=>p("name",n.target.value),isInvalid:!!c.name,placeholder:"Enter diet plan name"}),e.jsx(l.Control.Feedback,{type:"invalid",children:c.name})]})}),e.jsx(b,{md:6,children:e.jsxs(l.Group,{className:"mb-3",children:[e.jsxs(l.Label,{children:["Duration ",e.jsx("span",{className:"text-danger",children:"*"})]}),e.jsxs(l.Select,{value:i.duration,onChange:n=>p("duration",n.target.value),isInvalid:!!c.duration,children:[e.jsx("option",{value:"",children:"Select duration"}),V.map(n=>e.jsx("option",{value:n,children:n},n))]}),e.jsx(l.Control.Feedback,{type:"invalid",children:c.duration})]})})]}),e.jsxs(A,{children:[e.jsx(b,{md:4,children:e.jsxs(l.Group,{className:"mb-3",children:[e.jsxs(l.Label,{children:["Type ",e.jsx("span",{className:"text-danger",children:"*"})]}),e.jsxs(l.Select,{value:i.type,onChange:n=>p("type",n.target.value),isInvalid:!!c.type,children:[e.jsx("option",{value:"",children:"Select type"}),_.map(n=>e.jsx("option",{value:n,children:n},n))]}),e.jsx(l.Control.Feedback,{type:"invalid",children:c.type})]})}),e.jsx(b,{md:4,children:e.jsxs(l.Group,{className:"mb-3",children:[e.jsxs(l.Label,{children:["Category ",e.jsx("span",{className:"text-danger",children:"*"})]}),e.jsxs(l.Select,{value:i.category,onChange:n=>p("category",n.target.value),isInvalid:!!c.category,children:[e.jsx("option",{value:"",children:"Select category"}),G.map(n=>e.jsx("option",{value:n,children:n},n))]}),e.jsx(l.Control.Feedback,{type:"invalid",children:c.category})]})}),e.jsx(b,{md:4,children:e.jsxs(l.Group,{className:"mb-3",children:[e.jsx(l.Label,{children:"Subcategory"}),e.jsxs(l.Select,{value:i.subcategory,onChange:n=>p("subcategory",n.target.value),children:[e.jsx("option",{value:"",children:"Select subcategory (optional)"}),O.map(n=>e.jsx("option",{value:n,children:n},n))]}),e.jsx(l.Text,{className:"text-muted",children:"Optional additional classification for the diet plan."})]})})]}),e.jsx(A,{children:e.jsx(b,{md:12,children:e.jsxs(l.Group,{className:"mb-3",children:[e.jsx(l.Label,{children:"PDF File"}),e.jsx(l.Control,{type:"file",accept:".pdf",onChange:j}),e.jsx(l.Text,{className:"text-muted",children:"Upload a PDF file (max 10MB). Only PDF files are allowed."}),(t==null?void 0:t.pdfFile)&&e.jsx("div",{className:"mt-2",children:e.jsxs("small",{className:"text-success",children:[e.jsx("i",{className:"fas fa-file-pdf me-1"}),"Current file: ",t.pdfFile.filename]})})]})})}),e.jsx(A,{children:e.jsx(b,{md:12,children:e.jsxs(l.Group,{className:"mb-3",children:[e.jsx(l.Label,{children:"Description"}),e.jsx(l.Control,{as:"textarea",rows:3,value:i.description,onChange:n=>p("description",n.target.value),placeholder:"Enter diet plan description (optional)"})]})})}),e.jsx(A,{children:e.jsx(b,{md:12,children:e.jsxs(l.Group,{className:"mb-3",children:[e.jsx(l.Check,{type:"checkbox",label:"Active",checked:i.isActive,onChange:n=>p("isActive",n.target.checked)}),e.jsx(l.Text,{className:"text-muted",children:"Only active diet plans will be visible to users."})]})})})]}),e.jsxs(g.Footer,{children:[e.jsx(P,{variant:"secondary",onClick:N,children:"Cancel"}),e.jsx(P,{variant:"primary",type:"submit",disabled:d,children:d?e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"spinner-border spinner-border-sm me-2",role:"status","aria-hidden":"true"}),t?"Updating...":"Creating..."]}):t?"Update Plan":"Create Plan"})]})]})]})},K=({show:x,onHide:s,onConfirm:t,title:r,message:i,confirmButtonText:v="Delete",confirmButtonVariant:d="danger"})=>{const u=()=>{t(),s()};return e.jsxs(g,{show:x,onHide:s,centered:!0,children:[e.jsx(g.Header,{closeButton:!0,children:e.jsxs(g.Title,{className:"text-danger",children:[e.jsx("i",{className:"fas fa-exclamation-triangle me-2"}),r]})}),e.jsx(g.Body,{children:e.jsx("p",{className:"mb-0",children:i})}),e.jsxs(g.Footer,{children:[e.jsx(P,{variant:"secondary",onClick:s,children:"Cancel"}),e.jsxs(P,{variant:d,onClick:u,children:[e.jsx("i",{className:"fas fa-trash me-2"}),v]})]})]})},be=()=>{var $;const[x,s]=h.useState([]),[t,r]=h.useState(!0),[i,v]=h.useState(""),[d,u]=h.useState({page:1,limit:10}),[c,D]=h.useState({page:1,limit:10,total:0,totalPages:0}),[f,F]=h.useState(!1),[S,p]=h.useState(null),[j,N]=h.useState({show:!1,plan:null,isDeleteAll:!1}),{showNotification:n}=B(),m=async()=>{try{r(!0);const a=await w.getAllDietPlans(d);s(a.dietPlans||[]),a.pagination&&D(a.pagination)}catch(a){console.error("Error fetching diet plans:",a),n({message:"Error fetching diet plans",variant:"danger"}),s([])}finally{r(!1)}};h.useEffect(()=>{(async()=>{try{r(!0);const o=await w.getAllDietPlans(d);s(o.dietPlans||[]),o.pagination&&D(o.pagination)}catch(o){console.error("❌ Error fetching diet plans:",o),n({message:"Error fetching diet plans",variant:"danger"}),s([])}finally{r(!1)}})()},[d]);const y=(x||[]).filter(a=>a.name.toLowerCase().includes(i.toLowerCase())||a.category.toLowerCase().includes(i.toLowerCase())||a.type.toLowerCase().includes(i.toLowerCase())||a.subcategory&&a.subcategory.toLowerCase().includes(i.toLowerCase())),k=async a=>{if(!a._id||!a.pdfFile){n({message:"No PDF file available for this diet plan",variant:"warning"});return}try{const o=await w.downloadPDF(a._id);w.triggerPDFDownload(o,a.pdfFile.filename),n({message:"PDF downloaded successfully",variant:"success"})}catch(o){console.error("Error downloading PDF:",o),n({message:"Error downloading PDF",variant:"danger"})}},U=async a=>{try{if(!a._id)return;await w.deleteDietPlan(a._id),n({message:"Diet plan deleted successfully",variant:"success"}),m(),N({show:!1,plan:null,isDeleteAll:!1})}catch(o){console.error("Error deleting diet plan:",o),n({message:"Error deleting diet plan",variant:"danger"})}},M=async()=>{try{await w.deleteAllDietPlans(),n({message:"All diet plans deleted successfully",variant:"success"}),m(),N({show:!1,plan:null,isDeleteAll:!1})}catch(a){console.error("Error deleting all diet plans:",a),n({message:"Error deleting all diet plans",variant:"danger"})}},R=()=>{F(!1),p(null),m()},T=a=>{u(o=>({...o,page:a}))};return e.jsxs(e.Fragment,{children:[e.jsx(z,{title:"Diet Plan",subName:"Manage and track diet plans"}),e.jsx("div",{className:"container-fluid",children:e.jsxs(H,{id:"diet-plan-container",title:"Diet Plans Management",description:"Manage and track all diet plans for rice challenge awareness",children:[e.jsxs("div",{className:"row mb-3",children:[e.jsx("div",{className:"col-md-2",children:e.jsx("input",{type:"text",className:"form-control",placeholder:"Search diet plans...",value:i,onChange:a=>v(a.target.value)})}),e.jsx("div",{className:"col-md-2",children:e.jsxs("select",{className:"form-select",value:d.category||"",onChange:a=>u(o=>({...o,category:a.target.value||void 0})),children:[e.jsx("option",{value:"",children:"All Categories"}),G.map(a=>e.jsx("option",{value:a,children:a},a))]})}),e.jsx("div",{className:"col-md-2",children:e.jsxs("select",{className:"form-select",value:d.subcategory||"",onChange:a=>u(o=>({...o,subcategory:a.target.value||void 0})),children:[e.jsx("option",{value:"",children:"All Subcategories"}),O.map(a=>e.jsx("option",{value:a,children:a},a))]})}),e.jsx("div",{className:"col-md-2",children:e.jsxs("select",{className:"form-select",value:d.type||"",onChange:a=>u(o=>({...o,type:a.target.value||void 0})),children:[e.jsx("option",{value:"",children:"All Types"}),_.map(a=>e.jsx("option",{value:a,children:a},a))]})}),e.jsx("div",{className:"col-md-2",children:e.jsxs("select",{className:"form-select",value:d.isActive===void 0?"":d.isActive.toString(),onChange:a=>u(o=>({...o,isActive:a.target.value===""?void 0:a.target.value==="true"})),children:[e.jsx("option",{value:"",children:"All Status"}),e.jsx("option",{value:"true",children:"Active"}),e.jsx("option",{value:"false",children:"Inactive"})]})}),e.jsx("div",{className:"col-md-2 text-end",children:e.jsxs("button",{className:"btn btn-primary me-2",onClick:()=>F(!0),children:[e.jsx("i",{className:"fas fa-plus me-2"}),"Add New Plan"]})})]}),t?e.jsx("div",{className:"text-center py-4",children:e.jsx("div",{className:"spinner-border",role:"status",children:e.jsx("span",{className:"visually-hidden",children:"Loading..."})})}):e.jsxs(e.Fragment,{children:[e.jsx("div",{className:"table-responsive",children:e.jsxs("table",{className:"table table-striped table-hover",children:[e.jsx("thead",{className:"table-dark",children:e.jsxs("tr",{children:[e.jsx("th",{children:"Plan Name"}),e.jsx("th",{children:"Duration"}),e.jsx("th",{children:"Type"}),e.jsx("th",{children:"Category"}),e.jsx("th",{children:"Subcategory"}),e.jsx("th",{children:"PDF"}),e.jsx("th",{children:"Status"}),e.jsx("th",{children:"Created"}),e.jsx("th",{children:"Actions"})]})}),e.jsx("tbody",{children:y.map(a=>e.jsxs("tr",{children:[e.jsx("td",{className:"fw-semibold",children:a.name}),e.jsx("td",{children:e.jsx("span",{className:"badge bg-info",children:a.duration})}),e.jsx("td",{children:a.type}),e.jsx("td",{children:e.jsx("span",{className:"badge bg-secondary",children:a.category})}),e.jsx("td",{children:a.subcategory?e.jsx("span",{className:"badge bg-light text-dark",children:a.subcategory}):e.jsx("span",{className:"text-muted",children:"-"})}),e.jsx("td",{children:a.pdfFile?e.jsx("button",{className:"btn btn-sm btn-outline-success",onClick:()=>k(a),title:"Download PDF",children:e.jsx("i",{className:"fas fa-download"})}):e.jsx("span",{className:"text-muted",children:"No PDF"})}),e.jsx("td",{children:e.jsx("span",{className:`badge ${a.isActive?"bg-success":"bg-secondary"}`,children:a.isActive?"Active":"Inactive"})}),e.jsx("td",{children:a.createdAt?new Date(a.createdAt).toLocaleDateString():"-"}),e.jsx("td",{children:e.jsxs("div",{className:"btn-group",role:"group",children:[e.jsx("button",{className:"btn btn-sm btn-outline-warning",onClick:()=>{p(a),F(!0)},title:"Edit",children:e.jsx("i",{className:"fas fa-edit"})}),e.jsx("button",{className:"btn btn-sm btn-outline-danger",onClick:()=>N({show:!0,plan:a,isDeleteAll:!1}),title:"Delete",children:e.jsx("i",{className:"fas fa-trash"})})]})})]},a._id))})]})}),y.length===0&&e.jsx("div",{className:"text-center py-4",children:e.jsx("p",{className:"text-muted",children:"No diet plans found matching your criteria."})}),c.totalPages>1&&e.jsx("nav",{"aria-label":"Diet plans pagination",children:e.jsxs("ul",{className:"pagination justify-content-center",children:[e.jsx("li",{className:`page-item ${c.page===1?"disabled":""}`,children:e.jsx("button",{className:"page-link",onClick:()=>T(c.page-1),disabled:c.page===1,children:"Previous"})}),Array.from({length:c.totalPages},(a,o)=>o+1).map(a=>e.jsx("li",{className:`page-item ${c.page===a?"active":""}`,children:e.jsx("button",{className:"page-link",onClick:()=>T(a),children:a})},a)),e.jsx("li",{className:`page-item ${c.page===c.totalPages?"disabled":""}`,children:e.jsx("button",{className:"page-link",onClick:()=>T(c.page+1),disabled:c.page===c.totalPages,children:"Next"})})]})})]})]})}),f&&e.jsx(W,{show:f,onHide:()=>{F(!1),p(null)},editingPlan:S,onSubmit:R}),e.jsx(K,{show:j.show,onHide:()=>N({show:!1,plan:null,isDeleteAll:!1}),onConfirm:j.isDeleteAll?M:()=>j.plan&&U(j.plan),title:j.isDeleteAll?"Delete All Diet Plans":"Delete Diet Plan",message:j.isDeleteAll?"Are you sure you want to delete all diet plans? This action cannot be undone.":`Are you sure you want to delete "${($=j.plan)==null?void 0:$.name}"? This action cannot be undone.`})]})};export{be as default};
